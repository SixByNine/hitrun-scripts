#!/bin/tcsh -f
# S.Bates 7/11/2008
# M.Keith 2008

#
# HitRun Processing script for the awesome
# new Parkes Multibeam Survey Mk II
#
# Steps:
# 1) Create rfi kill file with 'make_killfile;
# 2) Dedisperse with 'dedisperse_all'
# 3) Seek each one with seek/multiseek
# 4) Find best candidates with 'ph-best'
# 5) Fold candidates from .fil with 'dspsr'
# 6) Optimise candidates with 'pdmp'

echo "HitRun Processing script"
echo "========================"
echo "Software Versions"
$HITRUN/scripts/hitrun-getversions

set conffile = $HITRUN/config/hitrun_settings

setenv PULSARHUNTER_HOME $HITRUN/pulsarhunter
# Set some defaults
# NOTE: These will get OVERWRITTEN by the config file later on!
setenv HITRUN_NTHREADS 1
setenv HITRUN_FFT_MODE "SIGPROC"
setenv HITRUN_KILLFILE_MODE "FIXED"
setenv HITRUN_TIMEZAP_MODE "GIANT"
setenv HITRUN_SP_SEARCH "ON"
setenv HITRUN_BEST "PHBEST"
setenv LD_LIBRARY_PATH ${PGPLOT_DIR}:$LD_LIBRARY_PATH


set sigproc = $HITRUN/bin
set presto = $HITRUN/bin
set pulsarchunter = $HITRUN/bin
set dedisp = $HITRUN/bin/dedisperse_all
set pulsarhunter = $HITRUN/pulsarhunter/scripts
set utils=$HITRUN/scripts/utilities
set dspsr=$HITRUN/bin/dspsr
set pdmp=$HITRUN/bin/pdmp
set psradd=$HITRUN/bin/psradd
set zapfile=$HITRUN/config/zapfile
set chankill=$HITRUN/config/chan_kill
set paz=$HITRUN/bin/paz
set psredit=$HITRUN/bin/psredit
set quickgplot=$HITRUN/bin/quickgplot
set deg2hr = $HITRUN/scripts/utilities/deg2hr.csh

set timer="time "

set maxdm=1000
set mindm=0
set minwidth=0.000064
set zmax=100
set jump=start
set ddgulp=1000000
set sigproc_snrlimit=6
set presto_snrlimit=3
set max_tim=1000
set giant_settings="-mb"

if ( $# < 1 ) then
	echo "$0 [sigproc .fil file]"
	echo ""
	echo -n "Create a new hitrun settings file? (y/n)"
	set a=$<
	if ( $a == "y" ) then
		$HITRUN/scripts/utilities/create_hitrun_settings
	endif
	exit 1
endif

if ( $# > 1 ) then
	set conffile=$2
endif


source $conffile

if ( $# > 2 ) then
	set jump=$3
endif


set inputfile = $1

set nthread=$HITRUN_NTHREADS

echo "HITRUN Processing $inputfile ("`du -h $inputfile`")"
echo "==================================================="
echo "Config options:"
echo "HITRUN               = $HITRUN"
echo "HITRUN_NTHREADS      = $nthread"
echo "HITRUN_KILLFILE_MODE = $HITRUN_KILLFILE_MODE"
echo "HITRUN_FFT_MODE      = $HITRUN_FFT_MODE"
echo "HITRUN_TIMEZAP_MODE  = $HITRUN_TIMEZAP_MODE"
echo "HITRUN_SP_SEARCH     = $HITRUN_SP_SEARCH ($giant_settings)"
echo "dm range             = $mindm -> $maxdm"
echo "max tim files at once= $max_tim"
echo "chankill             = $chankill"
echo "zapfile              = $zapfile"
echo ""
echo "Starting at          : $jump"

setenv OMP_NUM_THREADS $nthread



set shortfile = `echo ${inputfile} | sed -e 's:\....::'`
set psrxml = ${shortfile}.psrxml

if ( -e $psrxml ) then
	echo $psrxml
else
	makePsrXml $inputfile > $psrxml
endif

# Work out which 2^n to use...
set nsamp=`$sigproc/header $inputfile -nsamples`
set i=$nsamp
set pow2=0
while ( $i > 1 )
set pow2=`echo $pow2 | awk '{print $0 + 1}'`
set i=`echo $i | awk '{print int($i/2)}'`
end

set tlength=$pow2
echo "[HITRUN] Using 2^$pow2 point transform"

# Get the beam number from the header file. Bit of a dodgy awk though...
set beam = `grep receiver_beam $psrxml | awk '{print substr($1,16,2)}'`


# Add a goto line here if you want to jump to a partuclar part of the script!
goto $jump
start:

if ( "$HITRUN_KILLFILE_MODE" == "FIXED" ) then
	set nchan = `$sigproc/header $inputfile -nchans`
	\rm -f $inputfile.killfile
	echo "for i in `seq $nchan` ; do  echo 1 ; done" | bash > $inputfile.killfile
	foreach ch (`cat $chankill`)
		set ch1=`echo $ch | awk '{print $1+1}'`
		sed -ie "${ch1}s:1:0:" $inputfile.killfile
	end
	cp $chankill ${inputfile}.dspsrzap
	goto tzap
endif

if ( "$HITRUN_KILLFILE_MODE" == "SWIN" ) then

	echo "[HITRUN] Creating 'killfile' to remove bad channels "`date`
	set cmd="$utils/make_killfile_shredder $inputfile $conffile $chankill"
	set cmd="$timer$cmd"
	echo $cmd
	$cmd # execute the command
	set ex=$?
	if ( $ex != 0 ) then
		echo "[HITRUN] ERROR: killfile creation failed"
		echo "Failed command was:"
		echo $cmd
		exit $ex
	endif
	goto tzap
endif

tzap:
if ( "$HITRUN_TIMEZAP_MODE" == "GIANT") then
	set cmd="$utils/timekill $inputfile $inputfile.killfile"
	set cmd="$timer$cmd"
	echo $cmd
	$cmd
	set ex=$?
	if ($ex != 0 ) then
		echo "[HITRUN] ERROR: Time domain zapping failed"
		echo "Failed command was:"
		echo $cmd
		exit $ex
	endif
	goto dedisperse
endif


dedisperse:


set giant_mode=""
if ( `echo $HITRUN_SP_SEARCH | awk '{print $1 ~ "ON"}'` ) then
	set giant_mode="-G $giant_settings"
endif

set sub_mindm=$mindm
set sub_maxdm=`$pulsarchunter/pch-dmcomp $psrxml -d $sub_mindm -N $max_tim`

while ( `echo $sub_mindm $maxdm | awk '{if($1 < $2) { print 1 } else { print 0 } }'` )
	\rm -f ${inputfile}.????.??.tim
	set sub_maxdm = `echo $sub_maxdm $maxdm | awk '{if($1 > $2) { print $2 } else { print $1 }}'`

	echo "[HITRUN] Dedispersing up to DM=$maxdm cm^-3.pc "`date`
	set cmd="$dedisp $inputfile -d $sub_mindm $sub_maxdm -g $ddgulp -k $inputfile.killfile $giant_mode"
	set cmd="$timer$cmd"
	echo $cmd
	$cmd
	set ex=$?
	if ( $ex != 0 ) then
		echo "[HITRUN] ERROR: dedispersion failed"
		echo "Failed command was:"
		echo $cmd
		exit $ex
	endif

	if ( `echo $HITRUN_SP_SEARCH | awk '{print $1 ~ "PLOT"}'` ) then
		foreach pulse ( `ls *.pulse` )
			set pw=`echo $pulse | awk -F "_" '{print $5}'`
			set dm=`echo $pulse | awk -F "_" '{print $7}'`
			set box=`echo $pulse | awk -F "_" '{print $6}'`
			set snr=`echo $pulse | awk -F "_" '{print $2}'`
			set pstart=`echo $pulse | awk -F "_" '{print $3}'`
			set fn=`echo $pulse | awk -F "_" '{print $8}'`
			set bm=`echo $pulse | awk -F "_" '{print $9}'| sed -e 's:\.pulse::'`
			set cname="${fn}_at_${pstart}_DM_${dm}_SNR_${snr}_beam$bm"
			ln -s $inputfile $cname.fil
			ln -s $inputfile.$dm.tim $cname.beam1
			ln -s ${inputfile}.0000.00.tim $cname.dm0
			ln -s $pulse $cname.PULSEDATA
			set dup=`ls *.tim | grep $dm -A 1 -B 1 | tail -n 1`
			set ddown=`ls *.tim | grep $dm -A 1 -B 1 | head -n 1`
			ln -s $dup $cname.dmhi
			ln -s $ddown $cname.dmlo
			set window=`pch-dmcomp $psrxml -l -d $dm | awk -v pw=$pw '{printf("%f",($2+pw)*3)}'`
			set st=`echo $pstart $window | awk '{print $1-$2/3.0}'`
			cmd="$quickgplot $cname -dec $box -s $st -r $window"
			echo "$dm $pw"
			echo $cmd
			$cmd
			ex=$?
			if ( $ex != 0 ) then
				echo "ERROR: SP plotting failed for '$pulse'"
			endif
		end

	endif



	if ( `echo $HITRUN_FFT_MODE | awk '{print $1 ~ "PRESTO"}'` ) then
		source $HITRUN/scripts/subscripts/run_presto
	endif

	if ( `echo $HITRUN_FFT_MODE | awk '{print $1 ~ "SIGPROC"}'` ) then
		source $HITRUN/scripts/subscripts/run_sigproc
	endif

	if ( `echo $HITRUN_FFT_MODE | awk '{print $1 ~ "PCHSEEK"}'` ) then
		source $HITRUN/scripts/subscripts/run_pchseek
	endif

	if ( -e ${inputfile}.0000.00.tim ) then
		mv ${inputfile}.0000.00.tim ${inputfile}.${beam}.0000.00.tim
		ln -s ${inputfile}.${beam}.0000.00.tim ${inputfile}.0000.00.tim
	endif

	set sub_mindm = $sub_maxdm
	set sub_maxdm=`$pulsarchunter/pch-dmcomp $psrxml -d $sub_mindm -N $max_tim`
end

if ( `echo $HITRUN_SP_SEARCH | awk '{print $1 ~ "MULTIBEAM"}'` ) then
	ln -s ${inputfile}.${beam}.0000.00.tim ${inputfile}.0000.00.tim
	set nspdetections = `ls *.pulse -1 | wc -l`
	if ( $nspdetections > 0 ) then
		echo "Tarring files:\n"
		cp ${inputfile}.killfile ${inputfile}.${beam}.killfile
		tar -cvf spfiles.tar ${inputfile}.${beam}.gresults ${inputfile}.${beam}.killfile *.pulse
		touch spfiles.go
	else 
		if ( -e ${inputfile}.${beam}.gresults ) then
			echo "No non-RFI single pulses found in ${inputfile} beam ${beam}\n"
			#       touch /home/ssi/${user}/hitrun/storage/${inputfile}.${beam}.empty
			tar -cvf spfiles.tar ${inputfile}.${beam}.gresults
			echo "SP files tarred...\n"
			touch spfiles.go
			echo "SP files ready to go...\n"
		else
			echo "Single-pulse search failed for ${inputfile} beam ${beam}\n"
			#			touch ${failuredir}/${inputfile}.${beam}.failed
		endif
	endif
endif


best:
if ( `echo $HITRUN_FFT_MODE | awk '{print $1 ~ "PRESTO"}'` ) then
	ls ${inputfile}*_ACCEL_* >! ${inputfile}.accelsearch
	set prdfile = ${inputfile}.accelsearch
	set cand_ext="_presto"
	set snr_lim=$presto_snrlimit
	set newbest=0
	source $HITRUN/scripts/subscripts/run_best
endif

if ( `echo $HITRUN_FFT_MODE | awk '{print $1 ~ "PCHSEEK"}'` ) then
	set prdfile = ${inputfile}_pch.prd
	set cand_ext="_pch"
	set snr_lim=$sigproc_snrlimit
	set newbest=0
	source $HITRUN/scripts/subscripts/run_best
endif

if ( `echo $HITRUN_FFT_MODE | awk '{print $1 ~ "SIGPROC"}'` ) then
	set prdfile = $inputfile.prd
	set cand_ext=""
	set snr_lim=$sigproc_snrlimit
	set newbest=0
	if ( `echo $HITRUN_BEST | awk '{print $1 ~ "MJK"}'` ) then
		set newbest=1
	endif

	source $HITRUN/scripts/subscripts/run_best
endif

#TESTY
exit 1

echo "[HITRUN] Removing time-series (saving zero-dm)"`date`
rm -f ${inputfile}.????.??.tim >& /dev/null



echo "[HITRUN] DONE "`date`
